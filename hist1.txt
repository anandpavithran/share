    1  ls -lrt
    2  exit
    3  ls -lrt
    4  ls -lrta
    5  exit
    6  exit
    7  git clone https://github.com/anandpavithran/kubernetes-demo
    8  git clone https://github.com/anandpavithran/380-chapter-1
    9  git clone https://github.com/anandpavithran/380-chapter-2
   10  git clone https://github.com/anandpavithran/380-chapter-3
   11  git clone https://github.com/anandpavithran/380-openshift-ansible
   12  git clone https://github.com/anandpavithran/380-kubernetes-demo1
   13  git clone https://github.com/anandpavithran/380-kubernetes-demo2
   14  oc login https://api.ocp4.example.com:6443 -u admin -p redhat
   15  oc get node
   16  kubectl get node
   17  oc projects
   18  oc whoami
   19  oc whoami -t
   20* oc log
   21  oc whoami -t
   22  oc login https://api.ocp4.example.com:6443 -u admin -p redhat
   23  oc whoami -t
   24  vim .kube/config 
   25  oc config get-contexts
   26  oc config set-context jio1 --cluster=api-ocp4-example-com:6443 --namespace=openshift --user admin
   27  oc config get-contexts
   28  oc logout 
   29  oc login https://api.ocp4.example.com:6443 -u admin -p redhat
   30  oc config use-context jio1
   31  oc logout 
   32  oc login https://api.ocp4.example.com:6443 -u admin -p redhat
   33  oc config get-contexts
   34  vim .kube/config 
   35  kubectl create namespace test100
   36  oc projects
   37  oc new-project test200
   38  oc projects
   39  oc project test100
   40  oc projects
   41  git clone https://github.com/anandpavithran/kubernetes-demo1
   42  cd kubernetes-demo1/
   43  ls
   44  vim hello.yml 
   45  #kubectl create -f hello.yml 
   46  kubectl get all
   47  kubectl create -f hello.yml 
   48  kubectl get all
   49  curl http://hello.apps.ocp4.example.com
   50  cd
   51  cd 380-kubernetes-demo2/
   52  ls
   53  tree 
   54  vim base/hello.yml 
   55  kubectl create namespace k8s-deploy-prod
   56  vim base/hello.yml 
   57  vim base/kustomization.yml 
   58  oc project k8s-deploy-prod 
   59  oc get all
   60  kubectl apply -k base/
   61  kubectl get all
   62  curl deploying-practice.apps.ocp4.example.com
   63  ls
   64  tree
   65  vim overlays/prod/kustomization.yml 
   66  oc delete all --all
   67  oc get all
   68  kubectl get all
   69  kubectl apply -k overlays/prod
   70  oc get all
   71  vim overlays/prod/kustomization.yml 
   72  ls
   73  curl deploying-practice.apps.ocp4.example.com
   74  ls overlays-update/
   75  vim overlays-update/prod/kustomization.yml 
   76  kubectl apply -k overlays-update/prod
   77  oc gt pod
   78  oc get pod
   79  curl deploying-practice.apps.ocp4.example.com
   80  oc kustomize 
   81  oc whoami --show-console
   82  cd
   83  oc projects
   84  oc delete project k8s-deploy-prod
   85  oc delete project test100
   86  oc delete project test200
   87  oc projects
   88  oc delete project test100
   89  oc delete project test200
   90  oc projects
   91  oc project test300
   92  oc get all
   93  oc import-image infosys --confirm --from quay.io/anandpavithran/infosys:1.0
   94  oc delete is infosys
   95  oc import-image infosys --confirm --from quay.io/anandpavithran/infosys:2.0
   96  oc get all
   97  oc new-app -i infosys --name test3
   98  oc get all
   99  oc expose svc test3
  100  oc get route
  101  curl http://test3-test300.apps.ocp4.example.com
  102  oc edit deployment/test3
  103  git clone https://github.com/anandpavithran/mytest2
  104  cd mytest2/
  105  vim index.html 
  106  podman build -t quay.io/anandpavithran/infosys:2.0 --format docker --layers=false .
  107  curl http://test3-test300.apps.ocp4.example.com
  108  podman login quay.io
  109  podman push quay.io/anandpavithran/infosys:2.0
  110  curl http://test3-test300.apps.ocp4.example.com
  111  oc get pod
  112  oc import-image infosys
  113  oc get pod
  114  curl http://test3-test300.apps.ocp4.example.com
  115  oc set triggers -h
  116  oc new-app -i infosys --as-deployment-config --name test33
  117  oc get all
  118  oc edit deployment test3
  119  cd
  120  oc projects
  121  oc delete project test100
  122  oc delete project test200
  123  oc projects
  124  oc logout
  125  oc login https://api.ocp4.example.com:6443 -u admin -p redhat
  126  oc delete all --all
  127  oc new-app --name test3 --docker-image=quay.io/anandpavithran/infosys:1.0
  128  oc new-app --name test3 --docker-image quay.io/anandpavithran/infosys:2.0
  129  oc epose svc test3
  130  oc expose svc test3
  131  oc get route
  132  oc get deployment
  133  oc edit deployment test3
  134  oc get deployment -o json
  135  oc get deployment -o jsonpath='{.status.availableReplicas}'
  136  oc get deployment test3 -o jsonpath='{.status.availableReplicas}'
  137  oc get deployment -o jsonpath='{.status.aavailableReplicas}'
  138  oc get deployment test3  -o jsonpath='{.status.aavailableReplicas}'
  139  oc get deployment test3  -o jsonpath='{.status.availableReplicas}'
  140  oc edit deployment test3
  141  oc get deployment test3  -o jsonpath='{.status.conditions[*].type}'
  142  oc edit deployment test3
  143  oc get deployment test3  -o jsonpath='{.status.conditions[?(@.type=="Available")].status}'
  144  oc edit deployment test3
  145  oc edit route test3
  146  oc get route -o jsonpath='{.items[*].spec.host}'
  147  oc get route -o jsonpath='{.items[*].spec.host}' |tr " " "\n"
  148  oc get route -o jsonpath='{.items[*].spec.host}' |tr "  " "\n"
  149  oc get route -o jsonpath='{.items[*].spec.host}' |tr " " " \n"
  150  oc get route -o jsonpath='{.items[*].spec.host}' |tr " " "\\n"
  151  oc get pod --all-namespaces 
  152  oc get pod --all-namespaces  -o=custom-columns=NAME:.metadata.name,STATUS:.status.phase,NODE:.spec.nodeName
  153  oc get pod -o jsonpath='{.items[*].spec.containers[*].images}'
  154  oc get pod
  155  oc get pod -o jsonpath='{.items[*].spec.containers[*].image}'
  156  oc edit pod
  157  cd 380-chapter-2/
  158  ls
  159  vim myjson.jsonpath 
  160  oc get nodes -o jsonpath-file=myjson.jsonpath 
  161  vim myjson.jsonpath 
  162  cd
  163  cd kubernetes-demo
  164  ls
  165  cd .
  166  cd
  167  cd kubernetes-demo2
  168  cd kubernetes-demo1
  169  ls
  170  cd ..
  171  ls
  172  cd 380-kubernetes-demo2/
  173  ls
  174  vim overlays/prod/kustomization.yml 
  175  vim base/hello.yml 
  176  oc new-project k8s-deploy-prod
  177  oc get all -n k8s-deploy-prod
  178  oc project k8s-deploy-prod
  179  oc kustomize -k overlays/prod/
  180  oc kustomize -f overlays/prod/
  181* oc kustomize 
  182  oc kustomize overlays/prod/
  183  oc get pod
  184  oc create -k overlays/prod/
  185  oc get pod
  186  oc ge tall
  187  oc get all
  188  oc apply -k overlays/prod/
  189  oc delete project k8s-deploy-prod
  190  vim base/hello.yml 
  191  cd
  192  oc new-project test300
  193  oc project test300
  194  oc delete all a--l
  195  oc delete all --all
  196  oc import-image infosys --confirm --from quay.io/anandpavithran/infosys:2.0
  197  oc new-app -i infosys --name test3
  198  oc expose svc test3
  199  oc rollout status
  200  oc rollout status deployment test3
  201  oc rollout status deployment test3 --revis
  202  oc rollout history deployment/test3
  203  oc rollout status deployment test3 --revision=2
  204  oc rollout status deployment test3 --revision=3
  205  oc  get deployment/test3  -o jsonpath='{.status.observedGeneration}'
  206  oc apply --help
  207  oc project k8s-deploy-prod
  208  cd 380-kubernetes-demo2/
  209  ls
  210  oc apply -k overlays/prod
  211  oc delete project k8s-deploy-prod 
  212  oc new-project k8s-deploy-prod
  213  oc delete project k8s-deploy-prod  --force
  214  oc delete project test100  --force
  215  oc delete project test200  --force
  216  oc projects
  217  CD
  218  cd
  219  ls
  220  git clone https://github.com/anandpavithran/380-cronjob-openshift
  221  git clone https://github.com/anandpavithran/380-api-openshift
  222  podman images
  223  podman rmi -a
  224  rpm -qa podman
  225  podman login quay.io
  226  podman logout --all
  227  podman login quay.io
  228  podman pull quay.io/anandpavithran/infosys:1.0
  229  podman images
  230  podman rmi -a
  231  podman images
  232  podman pull ubi8
  233  vim /etc/containers/registries.conf 
  234  podman search infosys
  235  sudo vim /etc/containers/registries.conf 
  236  podman search infosys
  237  podman rmi -a
  238  podman run -d --name test1 quay.io/anandpavithran/infosys:1.0
  239  podman ps
  240  podman exec -it test1 bash
  241  env | grep APPLE
  242  podman exec -it test1 bash
  243  podman ps
  244  podman stop test1
  245  podman ps
  246  podman ps -a
  247  podman run -it --name test1 ubi8 bash
  248  podman ps -a
  249  podman run -it --name test2 ubi8 bash
  250  podman start test2
  251  podman ps -a
  252  podman start test1
  253  podman ps -a
  254  podman exec -it test1 bash
  255  podman exec -it test1 ls
  256  podman stop test1
  257  podman ps -a
  258  podman rm test1
  259  podman ps -a
  260  podman run -d --name test1 -p 8031:8080 quay.io/anandpavithran/infosys:1.0
  261  podman ps -a
  262  hostname
  263  curl http://workstation.lab.example.com:8031
  264  podman ps
  265  curl http://workstation.lab.example.com:8031
  266  podman exec -it test1 bash
  267  curl http://workstation.lab.example.com:8031
  268  podman rm test1 -f
  269  podman ps -a
  270  podman rm test1 -f
  271  podman ps -a
  272  mkdir share
  273  ls -l
  274  podman run -d --name test1 -v /home/student/share:/var/www/html -p 8031:8080 quay.io/anandpavithran/infosys:1.0
  275  podman ps
  276  cd share/
  277  vim index.html
  278  rm index.html 
  279  cd
  280  ls -Zd /home/student/share/
  281  chcon -t container_file_t /home/student/share
  282  ls -Zd /home/student/share/
  283  echo HELLOWORLD > /home/student/share/index.html
  284  curl http://workstation.lab.example.com:8031
  285  podman exec -it test1 bash
  286  podman rm test1 -f
  287  ls /home/student/share/
  288  podman run -d --name test1 -v /home/student/share:/var/www/html -p 8031:8080 quay.io/anandpavithran/infosys:1.0
  289  curl http://workstation.lab.example.com:8031
  290  podman images
  291  #podman rmi -a 
  292  podman ps -a
  293  #podman rm -a -f
  294  podman images
  295  podman exec -it test2 bash
  296  podman ps -a
  297  podman commit test2 jio1-tools:1.0
  298  podman images
  299  podman  run -it --name test3 jio-tools:1.0 bash
  300  podman images
  301  podman  run -it --name test3 jio1-tools:1.0 bash
  302  podman images
  303  podman save -o jio1-tools.tar localhost/jio-tools:1.0
  304  podman save -o jio1-tools.tar localhost/jio1-tools:1.0
  305  ls
  306  podman save -o infosys.tar quay.io/anandpavithran/infosys:1.0
  307  ls
  308  podman rm -a -f
  309  podman rmi -a -f
  310  podman images
  311  podman ps -a
  312  podman images
  313  podman ps -a
  314  podman load -i infosys.tar
  315  podman images
  316  podman load -i jio1-tools.tar
  317  podman images
  318  history 
  319  ls
  320  history > hist1.txt
